package programmers.레벨2

/*
효진이는 멀리 뛰기를 연습하고 있습니다. 효진이는 한번에 1칸, 또는 2칸을 뛸 수 있습니다. 칸이 총 4개 있을 때, 효진이는
(1칸, 1칸, 1칸, 1칸)
(1칸, 2칸, 1칸)
(1칸, 1칸, 2칸)
(2칸, 1칸, 1칸)
(2칸, 2칸)
의 5가지 방법으로 맨 끝 칸에 도달할 수 있습니다. 멀리뛰기에 사용될 칸의 수 n이 주어질 때, 효진이가 끝에 도달하는 방법이 몇 가지인지 알아내, 여기에 1234567를 나눈 나머지를 리턴하는 함수, solution을 완성하세요. 예를 들어 4가 입력된다면, 5를 return하면 됩니다.

제한 사항
n은 1 이상, 2000 이하인 정수입니다.
 */

// 알고리즘 동적계획법 참고
class 레벨2_멀리뛰기 {
    fun 다른풀이(n: Int): Long {
        var answer: Long = 0
        val dp = Array(2001){1.toLong()}

        dp[1]=1
        dp[2]=2

        if(n>=3){
            for(i in 3..n){
                dp[i] = (dp[i-1] + dp[i-2]) % 1234567
            }
        }
        answer = dp[n]

        return answer
    }
}